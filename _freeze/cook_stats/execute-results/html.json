{
  "hash": "a74449ebc7085e1575434c75b32f3043",
  "result": {
    "markdown": "---\noutput-file: stats.html\n---\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ntweets = (\n    pd\n    .read_parquet('datasets/tweets.par')\n    # .assign(\n    #     local_time=lambda d: pd.to_datetime(d.local_time),\n    #     user_screen_name = lambda df: df.user_screen_name.astype('category')\n    # )\n)\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ntweets_day = (\n    tweets\n    .reset_index()\n    .assign(\n        date= lambda df: df.local_time.dt.date\n    )\n    .groupby(['user_screen_name', 'date'])\n        [['id']]\n        .count()\n        .rename(columns={'id':'tweets per day'})\n    #.reset_index()\n)\n```\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ntable = (\n    tweets_day\n    .groupby(['user_screen_name'])\n        .agg(['mean', 'std', 'min', 'max'])\n)\n\ntable\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"4\" halign=\"left\">tweets per day</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>user_screen_name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Lesjoursfr</th>\n      <td>11.576389</td>\n      <td>6.532236</td>\n      <td>1</td>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>Loopsidernews</th>\n      <td>2.822917</td>\n      <td>2.731905</td>\n      <td>0</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>Mediapart</th>\n      <td>30.190972</td>\n      <td>11.176521</td>\n      <td>3</td>\n      <td>78</td>\n    </tr>\n    <tr>\n      <th>MediapartBlogs</th>\n      <td>16.041667</td>\n      <td>4.609300</td>\n      <td>3</td>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>blast_france</th>\n      <td>2.513889</td>\n      <td>2.332877</td>\n      <td>0</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>brutofficiel</th>\n      <td>8.197917</td>\n      <td>4.020730</td>\n      <td>1</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>lemondefr</th>\n      <td>101.590278</td>\n      <td>39.595589</td>\n      <td>9</td>\n      <td>200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nprint(table.to_markdown())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n| user_screen_name   |   ('tweets per day', 'mean') |   ('tweets per day', 'std') |   ('tweets per day', 'min') |   ('tweets per day', 'max') |\n|:-------------------|-----------------------------:|----------------------------:|----------------------------:|----------------------------:|\n| Lesjoursfr         |                     11.5764  |                     6.53224 |                           1 |                          51 |\n| Loopsidernews      |                      2.82292 |                     2.73191 |                           0 |                          21 |\n| Mediapart          |                     30.191   |                    11.1765  |                           3 |                          78 |\n| MediapartBlogs     |                     16.0417  |                     4.6093  |                           3 |                          32 |\n| blast_france       |                      2.51389 |                     2.33288 |                           0 |                          16 |\n| brutofficiel       |                      8.19792 |                     4.02073 |                           1 |                          24 |\n| lemondefr          |                    101.59    |                    39.5956  |                           9 |                         200 |\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nfig, ax = plt.subplots()\n\nfig.set_size_inches(15, 10)\n\n\n\n(\n    tweets_day\n    .reset_index()\n    .plot\n        .scatter(\n            x='date',\n            y='tweets per day',\n            c='user_screen_name',\n            s=10,\n            cmap='Accent',\n            colorbar=False,\n            alpha=0.2,\n            ax=ax\n        )\n)\n\n(\n    tweets_day\n    .pivot_table(\n        index='date',\n        columns='user_screen_name',\n        values='tweets per day'\n    )\n    .rolling(7)\n    .mean()\n    .plot\n        .line(\n            ax=ax,\n            cmap='Accent'\n            #logy=True\n        )\n)\n\nplt.savefig('graphics/tweets_day.png')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](cook_stats_files/figure-html/cell-7-output-1.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "cook_stats_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}