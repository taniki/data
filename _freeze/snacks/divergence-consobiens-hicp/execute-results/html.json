{
  "hash": "ec94f70682e3711f3333ea00ba3b08ab",
  "result": {
    "markdown": "# visualiser la divergence entre l'IPC et la consommation en biens\n\nDans ce court article, nous allons regarder comment produire un graphique permettant de comparer l'évolution des prix de la consommation alimentaire et l'évolution des quantités de biens consommés.\nPour cela, nous allons utiliser les données de l'INSEE ainsi que `pandas` et `matplotlib`.\n\n![](./graphics/divergence_ipc_consobiens.png)\n\nUn graphique similaire a tourné sur [Twitter][4] avant d'atterrir sur [Mastodon][5].\nIntrigué par son petit côté spectaculaire, il semble important de pouvoir le déconstruire et le reconstruire au moins pour canaliser un biais de confirmation.\n\nUn peu d'autodéfense statistique ne fait jamais de mal.\n\n[4]: https://twitter.com/NicolasGoetzman/status/1674674155805876224\n[5]: https://eldritch.cafe/@belore/110661337704889187\n\n## les données\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n### la consommation des ménages en biens\n\nLes données proviennent de l'INSEE dans le cadre d'un [suivi régulier des dépenses de consommation][1].\nLe [fichier mis à disposition est un fichier Excel][2] assez sale, mais facile à remettre en forme en quelques lignes de pandas.\nLa principale fonction est `pd.read_excel()` qui sait aller chercher tout seul un fichier derrière une URL. Avec quelques paramètres pour notamment sauter des lignes de présentation ainsi que sélectionner directement quelques colonnes, on a assez rapidement un beau `pd.DataFrame`.\n\n[1]: https://www.insee.fr/fr/statistiques/7614669\n[2]: https://www.insee.fr/fr/statistiques/fichier/7614669/111_IR_Biens.xlsx\n\n::: {.cell execution_count=2}\n``` {.python .cell-code code-fold=\"false\"}\nbiens = (\n    pd\n    .read_excel(\n        'https://www.insee.fr/fr/statistiques/fichier/7614669/111_IR_Biens.xlsx',\n        sheet_name = \"Niveaux - Levels\",\n        skiprows = 10,\n        usecols = \"A,C:D\",\n        names = ['date', 'alimentaire', 'alimentaire hors tabac']\n    )\n    .set_index('date')\n)\n\n(\n    biens\n    .plot\n    .line()\n);\n```\n\n::: {.cell-output .cell-output-display}\n![](divergence-consobiens-hicp_files/figure-html/cell-3-output-1.png){width=592 height=429}\n:::\n:::\n\n\n### l'indice des prix à la consommation\n\nL'indice des prix à la consommation fait également partie d'un [suivi régulier par l'INSEE][6].\n\n[6]: https://www.insee.fr/fr/statistiques/7625852\n\nPour l'indice des prix à la consommation c'est la même manipulation, mais cette fois-ci, [les données][3] sont fournies dans un `zip`.\nIl faut donc aller le dézipper au préalable ; ce que ne sait pas faire `pandas`.\nC'est très certainement automatisable, mais pour cet exemple, j'ai fait cela à la main.\n\n[3]: https://www.insee.fr/fr/statistiques/serie/001762445#Telechargement\n\nLa série est en base 100 en indice 2015.\nCe qui signifie que les valeurs sont à interpréter comme un taux de variation multiplié par 100.\nCe ne sont pas donc pas des valeurs absolues comme des euros ou des tonnes.\nL'intention est de donner une lecture centrée sur l'évolution des ordres de grandeur.\n\nÀ noter aussi l'usage de `pd.to_datetime()` pour convertir la colonne `date` en objet `datetime` de pandas.\n\n> Définition : l’indice des prix à la consommation harmonisé (IPCH) est utilisé pour les comparaisons entre membres de l’Union européenne. Il est calculé pour tous les ménages, en France. La principale différence entre l’IPCH et l’IPC porte sur les dépenses de santé : l’IPCH suit des prix nets des remboursements de la sécurité sociale tandis que l’IPC suit des prix bruts.\n>\n> https://www.insee.fr/fr/statistiques/7233968#tableau-ipc-flash-g1-fr\n\n::: {.cell execution_count=3}\n``` {.python .cell-code code-fold=\"false\"}\n# HICP - Reference year 2015=100 - All households - France - COICOP\n# classification: 01 - Food and non-alcoholic beverages Identifier 001762445\n\nipc = (\n    pd.\n    read_excel(\n        'data/serie_001762445_05072023.xlsx',\n        skiprows = 3,\n        names = ['date', 'ipc']\n    )\n    .assign(date = lambda df: pd.to_datetime(df.date))\n    .set_index('date')\n    .sort_index()\n)\n\n(\n    ipc\n    .plot\n    .line()\n);\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/home/tk/.virtualenvs/kitchen/lib/python3.10/site-packages/openpyxl/styles/stylesheet.py:226: UserWarning: Workbook contains no default style, apply openpyxl's default\n  warn(\"Workbook contains no default style, apply openpyxl's default\")\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](divergence-consobiens-hicp_files/figure-html/cell-4-output-2.png){width=575 height=429}\n:::\n:::\n\n\n## les deux courbes affichées sans aucun pré-réglage\n\n::: {.cell layout-ncol='1' execution_count=4}\n``` {.python .cell-code}\nfig, ax = plt.subplots(figsize=(12,8))\n\n(\n    biens\n    .plot\n    .line(\n        ax= ax,\n        y = 'alimentaire hors tabac'\n    )\n)\n\n(\n    ipc\n    .plot\n    .line(\n        ax = ax,\n        secondary_y = True,\n    )\n)\n\nplt.tight_layout()\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](divergence-consobiens-hicp_files/figure-html/cell-5-output-1.png){width=1142 height=758}\n:::\n:::\n\n\nCeci est l'affichage brut des deux séries chacune avec une échelle différente ainsi qu'une pronfondeur temporelle différente.\n\n## consommation en biens indexée sur 2015\n\nPour commencer à comparer les deux séries, on va les ramener à une base commune : la base 100 indexée sur 2015.\nPour cela, rien de plus simple, on récupère la moyenne de l'ipc en 2015, on divise le reste de la série par cette valeur (`.div()`) et on multiplie par 100 (`.mul(100)`).\n\n::: {.cell execution_count=5}\n``` {.python .cell-code code-fold=\"false\"}\nbiens_2015 = (\n    biens\n    .div(\n        biens\n        .loc['2015']\n        .mean()\n    )\n    .mul(100)\n)\n```\n:::\n\n\n::: {.cell layout-ncol='1' execution_count=6}\n``` {.python .cell-code}\nfig, ax = plt.subplots(figsize=(12,8))\n\n(\n    biens_2015\n    .plot\n    .line(\n        ax= ax,\n        y = 'alimentaire hors tabac'\n    )\n)\n\n(\n    ipc\n    .plot\n    .line(ax = ax)\n)\n\nplt.tight_layout()\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](divergence-consobiens-hicp_files/figure-html/cell-7-output-1.png){width=1142 height=758}\n:::\n:::\n\n\nCe graphique commence à ressembler au graphique initial.\nIl est intentionnellement centré sur 2015 au niveau de l'abscisse ce qui évacue l'effet de hasard des superpositions de graphiques à double échelle.\n\n\n### une abscisse qui commence à 0\n\nLa divergence est assez prononcé mais par acquis de conscience, cela ne fait pas de mal de voir à quoi ressemble le graphique quand on force la présence d'une origine avec la méthode `.set_ylim()` de matplotlib.\n\n::: {.cell layout-ncol='1' execution_count=7}\n``` {.python .cell-code}\nfig, ax = plt.subplots(figsize=(12,8))\n\n(\n    biens_2015\n    .plot\n    .line(\n        ax= ax,\n        y = 'alimentaire hors tabac'\n    )\n)\n\n(\n    ipc\n    .plot\n    .line(ax = ax)\n)\n\nax.set_ylim([0, ipc.ipc.max() * 1.1 ])\n\nplt.tight_layout()\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](divergence-consobiens-hicp_files/figure-html/cell-8-output-1.png){width=1142 height=758}\n:::\n:::\n\n\n### avec un peu de travail cosmétique\n\nMaintenant pour rendre le graphique présentable, nous allons appliquer les principes suivants :\n\n- enlever le cadre du graphique pour réduire le bruit visuel ;\n- utiliser une grille horizontale pour faciliter la lecture des valeurs ;\n- remplacer la légende par une annotation de chacune des séries pour éviter la répétition de l'information ;\n- et enfin mettre un titre descriptif pour guider la lecture.\n\n::: {.cell layout-ncol='1' execution_count=8}\n``` {.python .cell-code code-fold=\"false\"}\nfig, ax = plt.subplots(figsize=(12,8))\n\n(\n    biens_2015\n    .loc['1996':]\n    .plot\n    .line(\n        ax= ax,\n        y = 'alimentaire hors tabac',\n        color = '#555'\n    )\n)\n\nax.annotate(\n    text = 'consommation des ménages en biens\\nalimentation\\nannée de référence 2015',\n    xy = (biens_2015.index[-1], biens_2015['alimentaire'].iloc[-1]),\n    xytext = (3, 6),\n    textcoords = 'offset points',\n    color = '#555'\n)\n\n(\n    ipc\n    .plot\n    .line(\n        ax = ax,\n        color= '#800020'\n    )\n)\n\nax.annotate(\n    text = 'indice des prix à la consommation (IPC)\\nalimentation hors alcool\\nannée de référence 2015',\n    xy = (ipc.index[-1], ipc.ipc.iloc[-1]),\n    xytext = (3, -10),\n    textcoords = 'offset points',\n    color= '#800020'\n)\n\nax.get_legend().remove()\n\nax.spines['top'].set_visible(False)\nax.spines['bottom'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\n\n\nax.set_xlabel(None)\n\nax.grid(axis='y')\n\nax.set_title(\"\"\"\nL'indice des prix à la consommation et la consommation des ménages en biens divergent de façon spectaculaire à partir de 2022 et un dérèglement systémique en 2020 suite au covid.\n\"\"\",\n    loc = 'left',\n    fontdict = {\n        'fontsize': 14,\n        'fontweight': 'bold'\n    },\n    wrap = True\n)\n\nplt.tight_layout()\n\nplt.savefig('graphics/divergence_ipc_consobiens.png')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](divergence-consobiens-hicp_files/figure-html/cell-9-output-1.png){width=2000 height=753}\n:::\n:::\n\n\n## compilation des données\n\nPour finir, il faut exporter les données pour éventuellement les utiliser dans un autre logiciel de visualisation.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code code-fold=\"false\"}\n(\n    biens_2015\n    .loc['1996':]\n    .join(ipc)\n    .to_csv('datasets/divergence_ipc_consobiens.csv')\n)\n```\n:::\n\n\n",
    "supporting": [
      "divergence-consobiens-hicp_files"
    ],
    "filters": [],
    "includes": {}
  }
}